---

- fail: msg="You must define __users__ as a dictionary in your playbook !"
  when: >
   __users__ is not defined or
   (__users__ is defined and __users__ is not mapping)

- name: Install prezto from git.
  git: repo={{ prezto_repo_url }}
       dest=~{{ item.key }}/.zprezto/
       track_submodules=yes
       force=yes
       version={{ item.value.get('prezto_version', 'master') }}
       update=no
  with_dict: '{{ __users__ | default({}) }}'
  when: >
      item.value.has_key('prezto_install') and item.value.prezto_install

- name: Set permissions on ~/.zprezto.
  file:
    mode=0755
    owner={{ item.key }}
    path=~{{ item.key }}/.zprezto/
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install

- name: Ensure prezto sourcing in ~/.zshrc.
  lineinfile:
    dest=~{{ item.key }}/.zshrc
    line="\n# Source prezto \n{{ prezto_source }}"
    regexp="zprezto/init.zsh"
    state=present
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install

- name: Set up zlogin.
  template:
    mode=0744
    owner={{ item.key }}
    src=zlogin.j2
    dest=~{{ item.key }}/.zlogin
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install

- name: Set up zlogout.
  template:
    mode=0744
    owner={{ item.key }}
    src=zlogout.j2
    dest=~{{ item.key }}/.zlogout
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install

- name: Set up zprofile.
  template:
    mode=0744
    owner={{ item.key }}
    src=zprofile.j2
    dest=~{{ item.key }}/.zprofile
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install

- name: Set up zpreztorc.
  template:
    mode=0744
    owner={{ item.key }}
    src=zpreztorc.j2
    dest=~{{ item.key }}/.zpreztorc
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install

- name: Set up zshenv.
  template:
    mode=0744
    owner={{ item.key }}
    src=zshenv.j2
    dest=~{{ item.key }}/.zshenv
  with_dict: '{{ __users__ | default({}) }}'
  when: >
    item.value.has_key('prezto_install') and item.value.prezto_install
